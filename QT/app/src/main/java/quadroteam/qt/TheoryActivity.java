package quadroteam.qt;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

public class TheoryActivity extends AppCompatActivity {
    TextView t;
    int s;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_theory);
         s = getIntent().getIntExtra("lvl?", 1);
        t = (TextView)findViewById(R.id.theory);


    switch (s) {
        case 1: t.setText("1. Что такое система счисления?\n" +
                "Издавна у человека была потребность в счёте. Для этого используются определенные правила (например, после 9 идёт 10, а не 7, 12 или ещё что-то). Правила записи чисел называются системой счисления.\n" +
                "Число обозначает количество, а цифра-это символ. Например, число 15 и цифры 1 и 5.\n" +
                "Мы пользуемся десятичной системой счисления, в ней 10 цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. То есть основание (количество цифр, используемых в системе счисления) равно 10.\n" +
                "Заметим, что в 10й системе счисления нет цифры 10, а в 2й (где используются 2 цифры: 0 и 1) нет цифры 2.\n" +
                "В системе счисления с основанием n наибольшая цифра равна n-1.");
            break;
        case 2: t.setText("2. Как формируются числа в системах счисления?\n" +
                "Как мы считаем? Казалось бы, простой вопрос, но если задуматься: как мы понимаем, что после 9 идет 10, а после 10-11? Разберём счёт на примере привычной 10й системы счисления\n" +
                "1-2-3-4-5-6-7-8-9\n" +
                "А дальше? У нас закончились цифры (ведь из 1го уровня нам известно, что 9-самая большая цифра в 10й системе счисления), поэтому 9 мы заменим на 0, а перед ним поставим 1. Получим 10. Дальше ситуация повторится:\n" +
                "10-11-12-13-14-15-16-17-18-19\n" +
                "Когда у нас закончатся цифры в нулевом разряде (разряд-это позиция цифры в числе. Разряды нумеруются справа налево, начиная с 0), мы обнулим его и добавим 1 в первый разряд. 19-20 (9 заменили на 0, и добавили к 1 еще 1).\n" +
                "Когда мы достигнем 99, мы обнулим сразу 2 разряда и впереди поставим 1: 100.\n" +
                "В других с.с. все происходит также, например, в 2й с.с:\n" +
                "0-01-10-11-100-101-110-111-1000\n" +
                "На этом уровне число в скобках-основание системы счисления, например 101 (2)");
            break;
        case 3: t.setText("");
            break;
        case 4: t.setText("");
            break;
        case 5: t.setText("Мы уже познакомились с правилами перевода из 10 СС в другие СС с любым основание. " +
                "Но остался вопрос: «А как же мне перевести из 7-ичной или 3-ичной в 10-ичную?». У нас есть ответ!\n"
                +"Нужно лишь немного внимательности и знание таблицы степеней разных цифр.\n"
                +"Каждую цифру в числе справа на лево надо пронумеровать от 0(ВНИМАНИЕ: всегда начинаем с нуля!) до конца. " +
                "Номер цифра – это ничто иное как степень основания СС, в которую мы переводим. " +
                "Далее еще проще: Выписываем цифру переводимого числа, умноженного на основание СС в степени номера этого числа, и складываем так все цифры!\n");
            break;
        case 6: t.setText("\n" +
                "Какие системы называются кратными? Кратными СС называются те СС, " +
                "основание которых в какой-то степени дает нам основание нужной СС. Например, 8 – это 2 в 3, а это значит,\n" +
                "что число, представленное в двоичной записи, достаточно разбить на группы по 3. " +
                "Затем перевести группы в 10-чную цифру и выписать их в том порядке, в котором стояли группы.\n" +
                "ВАЖНО: Следите за основанием СС! Например, 10 в 10-чной – это A в 16-ричной!\n");
            break;
        case 7: t.setText("");
            break;
        case 8: t.setText("");
            break;
        case 9: t.setText("");
            break;
        case 10: t.setText("");
            break;
    }
}


    public void startLVLTasks(View v){
        Intent i = new Intent(this, TaskActivity.class);
        int m = getIntent().getIntExtra("lvl?", 1);
        i.putExtra("lvl", m);
        startActivity(i);
    }

}
